1. bf_insert_address.sql
earlier version of bf_insert_legal_entity_address.sql where every unique
combination of staging.prcl_prcl's OwnerZip, OwnerCity, OwnerState, and 
OwnerCountry are added to the core.address table. Checks for duplicates.
Would like to modify to include adding all addresses for buildings.

2. bf_insert_building.sql
selects what we have defined as a building from staging.prcl_prcl,
staging.prcl_bldgcom and staging.prcl_bldgres and currently stores the prcl_prcl
information in core.building, as well as what core parcel the building belongs to
and what legal entity is associated with the building.
Buildings are numbered by parcel. Does not currently check for duplicates.

3. bf_insert_legal_entity_address.sql
grabs owner address information from staging.prcl_prcl and stores it in
core.address. The address ID is composed of a hash of the 4 fields names and 
their values. Checks for duplicates.

4. bf_insert_legal_entity.sql
grabs OwnerName and OwnerName2 from staging.prcl_prcl and finds the matching
address from the address table and grabs its id to create a row in 
core.legal_entity. Ids are incrementing. Checks for duplicates.

5. bf_insert_parcel.sql
earlier version of dwp_insert_parcel.sql that uses the old logic to find
what we have determined as a parcel from staging.prcl_prcl and put it into
core.parcel. Takes countyid as input. Don't use anymore

6. bf_insert_specparceltype.sql
general core.special_parcel_type with redb codes generated from
jfl_insert_county_code_lookup.sql for lookup by core.parcel.
Calls jfl_insert_county_code_lookup. County id defaults to '1111' but will
need to be changed to be dynamic.

7. dwp_create_parcel11.sql
mashes a given cityblock parcel and ownercode from staging.prcl_prcl into a 
parcel11 id

8. dwp_insert_address.sql
Mimic of bf_insert_address

9. dwp_insert_parcel.sql
Uses most recent logic to define parcels and puts them into core.parcel.
Check for duplicates currently commented out for performance reasons.
Builds a redb id from countyid and an incrementing parcel ids.
Takes a countyid as input

10. jfl_insert_address.sql
preliminary version for inserting addresses. Do not use.

11. jfl_insert_county_code_lookup.sql
generates a redb code for special/sub parcel types.
Takes countyid/county code/code type as inputs
Inserts into core.county_code_lookup

12. jfl_insert_subparceltype.sql
same as bf_insert_specparceltype but for subparcels

13. jfl_prcl11_builder.sql
builds parcel11 out of cityblock, parcel, and ownercode inputs

14. jfl_prcl11_to_handle.sql
casts input prcl11 to handle format